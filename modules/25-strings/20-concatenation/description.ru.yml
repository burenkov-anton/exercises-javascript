---

name: Конкатенация
theory: |

  В веб-разработке программы постоянно оперируют строками, все что мы видим на сайтах, так или иначе представлено в виде текста. Этот текст чаще всего динамический, то есть полученный из разных частей соединенных вместе. Операция соединения строк, в программировании, называется конкатенацией.

  ```javascript
  // Оператор такой же как и при сложении чисел
  // но здесь он имеет другой смысл (семантику)
  console.log('Dragon' + 'stone');
  // => 'Dragonstone'
  ```

  Склеивание строк всегда происходит в том же порядке, в котором записаны операнды. Левый операнд становится левой частью строки, а правый — правой.

  Вот еще несколько примеров:

  ```javascript
  console.log('Kings' + 'wood');     // => Kingswood

  // Обратный порядок слов
  console.log('road' + 'Kings');     // => roadKings

  // Конкатенировать можно абсолютно любые строки
  console.log("King's" + 'Landing'); // => King'sLanding
  ```

  В последнем примере название города получилось с ошибкой: *King's Landing* нужно писать через пробел. Но в наших начальных строках не было пробелов, а пробелы в самом коде слева и справа от символа `+` не имеют значения, потому что они не являются частью строк.

  Выхода из этой ситуации два:

  ```javascript
  // Оба способа равнозначны

  console.log("King's " + 'Landing'); //  => King's Landing
  console.log("King's" + ' Landing'); //  => King's Landing
  ```

  Пробел — такой же символ, как и другие, поэтому сколько пробелов поставить в строке — столько и получится:

  ```javascript
  console.log("King's " + ' Landing');   // => King's  Landing

  console.log("King's  " + '  Landing'); // => King's    Landing
  ```

instructions: |

  Выведите на экран

  ```
  Winter came for the House of Frey.
  ```

  используя конкатенацию слов.

definitions:
  - name: Конкатенация
    description: |
      операция соединения двух строк. Например, `console.log("King's " + ' Landing');`
